<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>