<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KEH/2Q==
</value>
  </data>
</root>