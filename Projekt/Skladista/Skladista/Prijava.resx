<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>