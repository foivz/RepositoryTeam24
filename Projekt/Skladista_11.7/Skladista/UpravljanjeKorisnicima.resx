<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ulogaBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>205, 17</value>
  </metadata>
  <metadata name="zaposlenikBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Azuriraj.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAJYSURBVFhH7ZNfSFNhGMaNsNtIrSEyCtdNV13UTVFQ
        XViKVhTdBV0VEQopFGgXioZJK1IIWRBMhHWTFWQYztRTyvJMsXTUws3myRm5P21N3bBlT9839sU6fsed
        zSCIc+DHOM/53vf5cTjLAZAVxzsN7QQkaeedUQM3TAcrD0anEIy51iXBDdeClc9FxtDjroIg1ePL0pus
        JbihEqzc+20UFsdJtIrF6Jg8AOtMJXzRiawkuCEPVj5LyjsnTuCWbTvuiDtgntyPB84jGPTWIBBzZCzB
        DeWw8k9hO8zjFWgZ0sNo0/8WsDgP45G7DMPztQguv89IghumwsqlkB33x8pxXSjCjaGiVQJd7lI8k07D
        7m9A6PsH1RLckMHKZ77aYRLL0DBQiCahUFGgWzqFvs9nMR5uQTiu7t/BDSms3BMUcfd1Ka5Zdajv16UV
        sBIBwX8BjkgbIj+m00pwQ1b+kZS3DR/D1efbUNe7VbXAoP88bKFqOKMmLKx41pRYFbByd0DEbeEoaroL
        cKWnIAuByxhdqINr2YzFn5KixB83rNzlH8HNgRJUPclH9dO8dQjU4m2sCZ64BUuY5UrIBTDlG0FzXwku
        duWh8vGWvyDQiHdxI6SVh4jCm5BI7ZQLJN4Aj0w+wt75M9wdSZTfgBJ0sLF/p2qBF75ziTL5Hh7cUA5d
        Zny1R7XAy8AlTUAT0AQ0AU1AE/gPBFKvfymwkZBb0WEw0YWZUG4uvkdmN9F53n4GN6Qkr80EHUFPMBB2
        EXYT9hL2EQ4SDiV/6T3N6XN6jp6nc3R+A68DQM4vlnPTqOgPqVAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="Kreiraj.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>